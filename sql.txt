
 12. Retrieve all the attributes of an employee and attributes of DEPARTMENT
he works in for every employee of ‘Research’ department.

select *
from EMPLOYEE E
where e.DNO in (
    select d.DNUMBER
    from DEPARTMENT D
    where d.DNAME = 'Research'
);


13. Make a list of all project numbers for projects that involve an employee whose
 last name is 'Smith' as a worker or as a manager of the department that controls the project.

Select po.Pnumber
from Project po
where po.Dnum in (
    select e.SSN
    from EMPLOYEE E
    where e.LNAME = 'Smith'
);


14. Retrieve the name and address of all employees who work for the 'Research' department.
select e.FNAME, e.MINIT, e.LNAME
from EMPLOYEE E
where e.DNO in (
    select d.DNUMBER
    from DEPARTMENT D
    where d.DNAME = 'Research'
);


15. Retrieve the name of each employee who has a dependent with the same first name as the employee.
select *
from EMPLOYEE E, DEPENDENT D
where d.DEPENDENT_NAME = e.FNAME;

16. Retrieve the names of employees who have no dependents.
select *
from EMPLOYEE E
where e.SSN not in (
    select d.ESSN
    from DEPENDENT D
    );


18. Find the maximum salary among employees who work for the 'Research' department.
select max(e.SALARY) from EMPLOYEE E, DEPARTMENT D
where e.DNO = d.DNUMBER and d.DNAME = 'Research';



19. For each department, retrieve the department number,
 the number of employees in the department, and their average salary.
select e.DNO, count(e.DNO) as number_of_employees, avg(e.SALARY) as average_salary
from EMPLOYEE E
group by e.DNO
order by e.DNO;



20. For each project, retrieve the project number, project name,
 and the number of employees who work on that project.

select WO.PNO, P.PNAME, count(WO.ESSN) as number_of_employees
from WORKS_ON WO, PROJECT P
where WO.PNO = p.PNUMBER
group by WO.PNO, p.PNAME
order by WO.PNO;


21. For each project on which more than two employees work,
retrieve the project number, project name, and the number of employees who work on that project.

select WO.PNO, p.PNAME, count(WO.ESSN)
from WORKS_ON WO, PROJECT P
where wo.PNO = p.PNUMBER
group by WO.PNO, p.PNAME
having count(WO.ESSN) > 2
order by wo.PNO;


22. Retrieve all employees whose address is in Houston, Texas. Here, the value of the ADDRESS attribute
must contain the substring 'Houston,TX‘ in it.
select e.FNAME, e.ADDRESS from EMPLOYEE E
where e.ADDRESS like '%Houston TX%';


23. Retrieve a list of employees and the projects each works in, ordered by the employee's department,
and within each department ordered alphabetically by employee last name.
select e.FNAME, e.LNAME, p.PNAME, e.DNO
from EMPLOYEE E, WORKS_ON WO, PROJECT P
where e.SSN = WO.ESSN and WO.PNO = p.PNUMBER
group by e.DNO, p.PNAME, e.LNAME, e.FNAME
order by e.DNO, e.LNAME;


24. Retrieve the names of all employees who have two or more dependents.
select e.FNAME, e.LNAME, count(e.SSN)
from EMPLOYEE E, DEPENDENT D
where e.SSN = d.ESSN
group by e.FNAME, e.LNAME
having count(d.ESSN) >= 2;


 25. List the names of managers who have at least one dependent.
select e.FNAME, e.LNAME, count(d.ESSN)
from EMPLOYEE E, DEPENDENT D
where d.ESSN in (
    select e.SSN
    from EMPLOYEE E2
    where e.SSN = E2.SUPER_SSN
    )
group by e.FNAME, e.LNAME
having count(d.ESSN) >= 1;



 26. Change the location and controlling department number of project number 10 to 'Bellaire' and 5, respectively.
update PROJECT
set PLOCATION = 'Bellaire', PNUMBER = 5
where PNUMBER = 10;

-- 27. Give all employees in the 'Research' department a 10% raise in salary.
update EMPLOYEE
set SALARY = salary + (SALARY * 0.1)
where DNO in (
    select d.DNUMBER
    from DEPARTMENT D
    where d.DNAME = 'Research'
    );

-- 28. Delete the details of the employee whose last name is ‘Brown’.
delete
from EMPLOYEE E
where e.LNAME = '%Brown%';

-- 29. Delete all the employees from the ‘Research’ department.
delete
from EMPLOYEE E
where e.DNO in (
    select d.DNUMBER
    from DEPARTMENT D
    where d.DNAME = 'Research'
    );

